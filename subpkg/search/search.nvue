<template>
  <view>
    <view class="search_box">
      <!-- 使用 uni-ui 提供的搜索组件 -->
      <uni-search-bar @input="input" :radius="100" cancelButton="none"></uni-search-bar>
    </view>
    <view class="sugg_list" style="padding: 20px;" v-if="kw.length !== 0">
      <view class="sugg_item" v-for="(item, i) in searchResults" :key="i" @click="gotoDetail(item.goods_id)">
        <view class="goods_name">{{item.goods_name}}</view>
        <uni-icons type="arrowright" size="16"></uni-icons>
      </view>
    </view>
    <view class="history-box" v-else>
      <!-- 标题区域 -->
      <view class="history-title">
        <text>搜索历史</text>
        <uni-icons type="trash" size="17" @click="cleanHistory"></uni-icons>
      </view>
      <!-- 列表区域 -->
      <view class="history-list">
        <text :text="item" v-for="(item, i) in historys" :key="i" @click="gotoGoodsList(item)">
          {{item}}
        </text>
      </view>
    </view>
  </view>
</template>

<script>
  export default {
    data() {
      return {
        timer: null,
        kw: '',
        searchResults: [],
        historyList: ['a', 'app', 'apple']
      };
    },
    methods: {
      input(e) {
        clearTimeout(this.timer)
        this.timer = setTimeout(()=>{
          this.kw = e
          this.getSearchResults()
        },500)
      },
      async getSearchResults() {
        if(this.kw.trim().length === 0 ) {
          this.searchResults = []
          return
        }
        const { data:res} = await uni.$http.get('/goods/search', { query: this.kw })
        if(res.meta.status !== 200) {
          return
        }
        this.searchResults = res.message.goods
        this.saveSearchHistory()
      },
      gotoDetail(goods_id) {
        uni.navigateTo({
          // 指定详情页面的 URL 地址，并传递 goods_id 参数
          url: '/subpkg/goods_detail/goods_detail?goods_id=' + goods_id
        })
      },
      saveSearchHistory() {
          this.historyList.push(this.kw)
      },
      cleanHistory() {
        this.historyList = []
      },
      gotoGoodsList(kw) {
        uni.navigateTo({
          url: '/subpkg/goods_list/goods_list?query=' + kw
        })
      }
    },
    computed: {
      historys() {
          return [...this.historyList].reverse()
        }
    }
  }
</script>

<style lang="scss">
.uni-searchbar {
  /* #ifndef APP-NVUE */
  display: flex;
  /* #endif */
  flex-direction: row;
  position: relative;
  padding: 16rpx;
  /* 将默认的 #FFFFFF 改为 #C00000 */
  background-color: #c00000;
}
.search_box {
  position: sticky;
  top: 0;
  z-index: 999;
}
.sugg_list {
  padding: 0 5px!important;
  .sugg_item {
    font-size: 12px;
    padding: 13px 0;
    border-bottom: 1px solid #efefef;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    .goods_name {
      // 文字不允许换行（单行文本）
      width: 680rpx;
      white-space: nowrap;
      // 溢出部分隐藏
      overflow: hidden;
      // 文本溢出后，使用 ... 代替
      text-overflow: ellipsis;
    }
  }
}
.history-box {
  padding: 0 5px;
  .history-title {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    height: 40px;
    font-size: 13px;
    border-bottom: 1px solid #efefef;
  }
  .history-list {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-content: space-between;
    text {
      padding: 5px 15px;
      margin-right: 5px;
      margin-top: 5px;
      background-color: #f1f0f1;
      border: none;
      color: #000000;
      font-weight: 400;
    }
  }
}
</style>
